# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on: [push, pull_request]

name: unittests

jobs:
  unittests:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: "3.6.1", jaspRequiredFilesBranch: "Windows",        libPath: "R\\library"}
          - {os: macOS-latest,   r: "3.6.1", jaspRequiredFilesBranch: "MacOS-Original", libPath: "Frameworks/R.framework/Versions/3.6/Resources/library"}
          # - {os: ubuntu-20.04, r: "release", R_LIBS: "", rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_COMPILE_AND_INSTALL_PACKAGES: never # unclear if we really want this though
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_REMOTES_UPGRADE: never
      VDIFFR_RUN_TESTS: true

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: Clone jasp-required-files
        run: git clone --branch=${{ matrix.config.jaspRequiredFilesBranch }} https://github.com/jasp-stats/jasp-required-files.git "${GITHUB_WORKSPACE}/../pkgs"
        shell: bash
        
      - name: Setup .Rprofile
        run: |
          path <- Sys.getenv('GITHUB_WORKSPACE'), '..', 'pkgs', '${{ matrix.config.libPath }}'), .libPaths()))
          print(path)
          cat(sprintf("\n.libPaths(c(%s, .libPaths()))\n", path), file = "~/.Rprofile", append = TRUE)
          if (.Platform$OS.type == "windows") {
            path <- normalizePath(file.path(Sys.getenv('GITHUB_WORKSPACE'), '..', 'pkgs', '64', 'JAGS'))
            print(path)
            cat(sprintf("Sys.setenv(JAGS_HOME = %s)", path), file = "~/.Rprofile", append = TRUE)
          }
          print(readLines("~/.Rprofile"))
        shell: Rscript {0}
        
      #- name: Setup .Rprofile
        #run: |
          ## locate R profile and store it in an environment variable for later use
          #R_PROFILE=$(locate -b .Rprofile | head -n 1)
          #echo ${R_PROFILE}
          #cat ${R_PROFILE}
          #echo "R_PROFILE=${R_PROFILE}" >> $GITHUB_ENV
          #echo ".libPaths(c(file.path(Sys.getenv('GITHUB_WORKSPACE'), '..', 'pkgs', '${{ matrix.config.libPath }}'), .libPaths()))" >> ${R_PROFILE}
          #cat ${R_PROFILE}
        #shell: bash

      #- name: Locate JAGS (Windows)
        #if: runner.os == 'Windows'
        #run: |
          #echo "Sys.setenv(JAGS_HOME = file.path(Sys.getenv('GITHUB_WORKSPACE'), '..', 'pkgs', '64', 'JAGS'))"  >> ${R_PROFILE}
          #cat ${R_PROFILE}
        #shell: bash

      - name: Check libPaths
        run: |
          print(Sys.getenv())
          print(.libPaths())
          print(sapply(.libPaths(), dir))
          print(normalizePath("~/.Rprofile"))
          if (file.exists("~/.Rprofile")) {
            print(readLines("~/.Rprofile"))
          } else {
            print("~/.Rprofile does not exist!")
          }
        shell: Rscript {0}

      - name: Install xquartz & JAGS (macOS)
        if: runner.os == 'macOS'
        run: |
          # JAGS + xquartz
          rm '/usr/local/bin/gfortran'
          brew install jags
          brew cask install xquartz

      - name: Setup jaspTools
        run: |
          install.packages('remotes')
          remotes::install_github('jasp-stats/jaspTools')
          jaspTools::setupJaspTools()
        shell: Rscript {0}

      - name: Unit tests
        run: source("tests/testthat.R")
        shell: Rscript {0}
